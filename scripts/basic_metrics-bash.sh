#! /bin/bash

#- ---------------------------------------------------------------------------
#-    Copyright (C) 2017 - Institut Curie
#-
#- This file is a part of Raw-qc software.
#-
#- File author(s):
#-     Dimitri Desvillechabrol <dimitri.desvillechabrol@curie.fr>
#- 
#- Distributed under the terms of the CeCILL-B license.
#- The full license is in the LICENSE file, distributed with this
#- software.
#- ---------------------------------------------------------------------------

## ---------------------------------------------------------------------------
## Basic_metrics
##
## Wrapper of Basic_metrics with many sanity check.
## A simple tool to calculate basic stats of a sample.
## 
## Inputs:
##      - String $INPUT: Input FastQ file(s) and JSON file generated by autotropos.
##      - String $OUTPUT: Output JSON file for basic_metrics.
##      - String $PLAN: CSV file of sample plan.
##      - String $CONFIG: JSON configuration file.
##      - String $LOG: Log file.
## ---------------------------------------------------------------------------

# Import utils
path="${BASH_SOURCE[0]%/*}/"
. "${path}"utils-bash.sh

# Initiate variable of the wrapper ($INPUT, $OUTPUT, $PLAN, $CONFIG, $LOG)
init_wrapper $@

# Catch variable in json
basic_metrics_path="$(get_json_entry ".basic_metrics.path" ${CONFIG})"
basic_metrics_option="$(get_json_entry ".basic_metrics.options" ${CONFIG})"
basic_metrics_threads="$(get_json_entry ".basic_metrics.threads" ${CONFIG})"

if [[ -n "${basic_metrics_path}" ]]; then
    basic_metrics_path="${basic_metrics_path%/}/"
fi

# Check if task is launch as job array
if [[ -n ${PBS_ARRAYID} ]]; then
    sample_array=($(get_sample $PLAN ${PBS_ARRAYID}))
else
    # case of one sample
    sample_array=($(get_sample $PLAN 1))
fi

# TODO check if __raw_data__ or real fastq.gz

# add ID name in outputs, inputs and logs
inputs=($(populate_template "${INPUT}" ${sample_array[0]}))
fastq_input=("${sample_array[@]:1:2}")
outputs=($(populate_template "${OUTPUT}" ${sample_array[0]}))
create_directory ${outputs[0]%/*}
log_output=$(populate_template "${LOG}" ${sample_array[0]})
create_directory ${log_output%/*}

# set some local variable
basic_metrics_fastq=("-1" "${fastq_input[0]}")
basic_metrics_json=("--json" "${inputs[1]}")
if [[ ${#fastq_input[@]} -eq 2 ]]; then
    basic_metrics_fastq+=("-2" "${fastq_input[1]}")
fi

_fail=0 # variable to check if everything is ok

# Command line
cmd="${basic_metrics_path}fastq_basic_metrics ${basic_metrics_option} \
                            ${basic_metrics_fastq[@]} \
                            ${basic_metrics_json[@]} \
                            -p ${outputs[@]}"
$cmd > ${log_output} 2>&1 || _fail=1

exit ${_fail}
