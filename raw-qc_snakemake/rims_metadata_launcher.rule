rule rims_metadata_launcher:
    input:
        i1="{output_path}" + "/" + config["experience"]["PROJECT"] + "-" + config["experience"]["RUN"] + "/" + config["experience"]["RUN"] + config["extension"]["RIMS_METADATA_LAUNCHER_INPUT_1"],
        i2="{output_path}" + "/" + config["experience"]["PROJECT"] + "-" + config["experience"]["RUN"] + "/archive/" + config["extension"]["RIMS_METADATA_LAUNCHER_INPUT_2"]
    output:
        "{output_path}" + "/" + config["experience"]["PROJECT"] + "-" + config["experience"]["RUN"] + "/archive/" + config["experience"]["RUN"] + config["extension"]["RIMS_METADATA_LAUNCHER_OUTPUT"]
    log:
        "{output_path}" + "/" + config["experience"]["PROJECT"] + "-" + config["experience"]["RUN"] + "/" + config["experience"]["RUN"] + "_logs/rims_metadata_launcher.log"
    params:
        cluster=config["rims_metadata_launcher"]["CLUSTER"],
        rims_metadata_launcher_path=config["samplesheet_to_sampledescription"]["PATH"],
        env=config["kdi"]["ENV"],
        run=config["experience"]["RUN"],
        project=config["experience"]["PROJECT"],
        cluster_type=config["rims_metadata_launcher"]["CLUSTER_ENV"],
        demand=config["experience"]["DEMAND"],
        output_extension=config["extension"]["RIMS_METADATA_LAUNCHER_OUTPUT"]
    run:
        shell("""
        {params.rims_metadata_launcher_path}/rims_metadata_parser_launcher.sh -o {wildcards.output_path}/{params.project}-{params.run}/archive/ -l {log} -e {params.env} -r {params.run} -p {params.project} -c {params.cluster_type} -d {params.demand} 2>>{log} &&
        if [[ -f {wildcards.output_path}/{params.project}-{params.run}/archive/{params.run}{params.output_extension} ]]; then
            sed -i "s|{{METADATA_FILE}}|{wildcards.output_path}/{params.project}-{params.run}/archive/{params.run}{params.output_extension}|g" {input.i2} 2>>{log}
        else
            echo "ERROR: the file '{wildcards.output_path}/{params.project}-{params.run}/archive/{params.run}{params.output_extension}' doesn't exist." &>>{log}
            exit 1
        fi
        """)
