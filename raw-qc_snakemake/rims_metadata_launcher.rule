rule rims_metadata_launcher:
    input:
        "{output_path}" + "/" + config["experience"]["PROJECT"] + "-" + config["experience"]["RUN"] + "/archive/" + config["experience"]["RUN"] + config["extension"]["RIMS_METADATA_LAUNCHER_INPUT"]
    output:
        "{output_path}" + "/" + config["experience"]["PROJECT"] + "-" + config["experience"]["RUN"] + "/archive/" + config["experience"]["RUN"] + config["extension"]["RIMS_METADATA_LAUNCHER_OUTPUT"]
    log:
        "{output_path}" + "/" + config["experience"]["PROJECT"] + "-" + config["experience"]["RUN"] + "/" + config["experience"]["RUN"] + "_logs/rims_metadata_launcher.log"
    params:
        cluster=config["rims_metadata_launcher"]["CLUSTER"],
        rims_metadata_launcher_path=config["samplesheet_to_sampledescription"]["PATH"],
        env=config["kdi"]["ENV"],
        run=config["experience"]["RUN"],
        project=config["experience"]["PROJECT"],
        cluster_type=config["rims_metadata_launcher"]["CLUSTER_ENV"],
        demand=config["experience"]["DEMAND"]
    run:
        shell("{params.rims_metadata_launcher_path}/rims_metadata_parser_launcher.sh -o {wildcards.output_path}/{params.project}-{params.run}/archive/ -l {log} -e {params.env} -r {params.run} -p {params.project} -c {params.cluster_type} -d {params.demand} 2>> {log}")
